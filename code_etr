#!/bin/bash
#
# code_etr
#
# Copyright 2022-2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Description:
#   shell wrapper script for code_etr python program
#


function check_for_package() {
  p_package=$1
  return `${pip_exe} --isolated --no-input show ${p_package} | grep Name | wc -l`
} # check_for_package

function find_executable() {
  p_probable_name=$1
  p_search_name=$2

  typeset -i t_major t_minor t_rc

  if [[ -z ${CODE_ETR_PYTHON_PATH} ]] ; then
    t_search_path='/usr/bin /usr/local/bin'
    t_probable_exe=`which ${p_probable_name} 2>/dev/null`
  else
    t_search_path="${CODE_ETR_PYTHON_PATH} /usr/bin /usr/local/bin"
    t_probable_exe="${CODE_ETR_PYTHON_PATH}/python3"
  fi
  exe_file_list=`find ${t_search_path} -maxdepth 1 -type f -executable -regex ".*${p_search_name}[0-9]+.[0-9]+"`
  t_rc=1
  for exe_file in ${t_probable_exe} ${exe_file_list} ; do
    echo "checking ${exe_file}"
    t_version=`${exe_file} --version 2>&1 | awk '{print $2}'`
    t_major=`echo ${t_version} | cut -d. -f1`
    t_minor=`echo ${t_version} | cut -d. -f2`
    if (( ${t_major} >= 3 )) && ((${t_minor} >= 10)) ; then
      return_executable=${exe_file}
      t_rc=0
      break
    else
      versions_found="${versions_found}${t_version} "
    fi
  done
  return ${t_rc}
} # find_executable

#
# Verify python is available and minimum version
#
find_executable python3 python
python_exe=${return_executable}
rc=$?
if (( ${rc} != 0 )) ; then
  echo
  echo "code_etr requires python version 3.10 or greater. "
  echo "only found these versions: ${versions_found}"
  echo "Unable to continue. Exiting..."
  echo
  exit 1
fi
echo "Using ${python_exe}"
#
# Check pip for required packages
#
pip_exe=`echo "${python_exe/python/pip}"`
for cur_package in jproperties sqlparse ; do
  check_for_package ${cur_package}
  rc=$?
  if (( ${rc} == 0 )) ; then
    echo
    echo "${cur_package} is not installed."
    echo "Unable to contine. Exiting..."
    echo
    exit 2
  fi
done
#
# run code_etr
#
if [[ -z ${CODE_ETR_DEV} ]]; then
  ${python_exe} code_etr.pyc $@
else
  ${python_exe} code_etr.py $@
fi

exit 0
